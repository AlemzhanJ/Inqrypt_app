/// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –¥–ª—è Inqrypt
class SecurityConstants {
  // –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤
  SecurityConstants._();

  // –ê–ª–≥–æ—Ä–∏—Ç–º—ã —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è
  static const String encryptionAlgorithm = 'AES';
  static const String encryptionMode = 'CBC';
  static const String padding = 'PKCS7';
  
  // –†–∞–∑–º–µ—Ä—ã –∫–ª—é—á–µ–π
  static const int keySize = 256; // AES-256
  static const int ivSize = 16; // 128 –±–∏—Ç –¥–ª—è IV
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
  static const int saltLength = 32; // –î–ª–∏–Ω–∞ —Å–æ–ª–∏ –¥–ª—è PBKDF2
  static const int iterations = 100000; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Ç–µ—Ä–∞—Ü–∏–π PBKDF2
  
  // –§–æ—Ä–º–∞—Ç—ã –¥–∞–Ω–Ω—ã—Ö
  static const String encryptedDataPrefix = 'INQRYPT:';
  static const String dataSeparator = '|';
  
  // –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
  static const int maxKeyAttempts = 3; // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏
  static const Duration keyLockoutDuration = Duration(minutes: 5); // –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ—Å–ª–µ –Ω–µ—É–¥–∞—á–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫
  
  // –°–æ–æ–±—â–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
  static const String securityWarning = '‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –ü—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–ª—é—á–∞ –≤—Å–µ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å—Ç–∞–Ω—É—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã';
  static const String keyBackupWarning = 'üîê –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–ª—é—á –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º –º–µ—Å—Ç–µ';
  static const String noDataStored = '‚úÖ –î–∞–Ω–Ω—ã–µ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ';
  
  // –•–µ—à-–∞–ª–≥–æ—Ä–∏—Ç–º—ã
  static const String hashAlgorithm = 'SHA-256';
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–ª—é—á–µ–π
  static const int keyGenerationLength = 32; // –î–ª–∏–Ω–∞ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º–æ–≥–æ –∫–ª—é—á–∞ –≤ –±–∞–π—Ç–∞—Ö
  static const bool useSecureRandom = true; // –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏ —Å—Ç–æ–π–∫–∏–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä
  
  // –í–∞–ª–∏–¥–∞—Ü–∏—è
  static const int minPasswordLength = 8; // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –ø–∞—Ä–æ–ª—è (–µ—Å–ª–∏ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω)
  static const int maxPasswordLength = 128; // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –ø–∞—Ä–æ–ª—è
  
  // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ (—Ç–æ–ª—å–∫–æ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
  static const bool enableSecurityLogging = false; // –û—Ç–∫–ª—é—á–µ–Ω–æ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
  static const String logPrefix = '[SECURITY]';
} 