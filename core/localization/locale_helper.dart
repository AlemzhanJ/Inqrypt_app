import 'package:flutter/material.dart';
import 'app_localizations.dart';
import 'app_localizations_delegate.dart';

/// –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–µ–π
class LocaleHelper {
  /// –ü–æ–ª—É—á–∏—Ç—å –ª–æ–∫–∞–ª—å —Å–∏—Å—Ç–µ–º—ã
  static Locale getSystemLocale() {
    final String systemLocale = WidgetsBinding.instance.platformDispatcher.locale.languageCode;
    
    // –ï—Å–ª–∏ —Å–∏—Å—Ç–µ–º–∞ –Ω–∞ —Ä—É—Å—Å–∫–æ–º, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä—É—Å—Å–∫–∏–π
    if (systemLocale == 'ru') {
      return const Locale('ru', 'RU');
    }
    
    // –î–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —è–∑—ã–∫–æ–≤ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∞–Ω–≥–ª–∏–π—Å–∫–∏–π
    return const Locale('en', 'US');
  }
  
  /// –ü–æ–ª—É—á–∏—Ç—å –ª–æ–∫–∞–ª—å –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–ª–∏ —Å–∏—Å—Ç–µ–º—ã
  static Future<Locale> getLocale() async {
    try {
      // –í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞
      // final prefs = await SharedPreferences.getInstance();
      // final savedLocale = prefs.getString(_localeKey);
      // if (savedLocale != null) {
      //   return Locale(savedLocale);
      // }
      
      return getSystemLocale();
    } catch (e) {
      // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∞–Ω–≥–ª–∏–π—Å–∫–∏–π
      return const Locale('en', 'US');
    }
  }
  
  /// –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—É—é –ª–æ–∫–∞–ª—å
  static Future<void> setLocale(Locale locale) async {
    try {
      // –í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞
      // final prefs = await SharedPreferences.getInstance();
      // await prefs.setString(_localeKey, locale.languageCode);
    } catch (e) {
      // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    }
  }
  
  /// –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö –ª–æ–∫–∞–ª–µ–π
  static List<Locale> getSupportedLocales() {
    return AppLocalizationsDelegate.supportedLocales;
  }
  
  /// –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –ª–∏ –ª–æ–∫–∞–ª—å
  static bool isLocaleSupported(Locale locale) {
    return AppLocalizationsDelegate.supportedLocales
        .any((supported) => supported.languageCode == locale.languageCode);
  }
  
  /// –ü–æ–ª—É—á–∏—Ç—å –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏—é –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–π –ª–æ–∫–∞–ª–∏
  static AppLocalizations getLocalizations(Locale locale) {
    return AppLocalizations.ofLocale(locale);
  }
  
  /// –ü–æ–ª—É—á–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —è–∑—ã–∫–∞
  static String getLanguageName(Locale locale) {
    switch (locale.languageCode) {
      case 'ru':
        return '–†—É—Å—Å–∫–∏–π';
      case 'en':
        return 'English';
      default:
        return 'English';
    }
  }
  
  /// –ü–æ–ª—É—á–∏—Ç—å —Ñ–ª–∞–≥ —è–∑—ã–∫–∞ (—ç–º–æ–¥–∑–∏)
  static String getLanguageFlag(Locale locale) {
    switch (locale.languageCode) {
      case 'ru':
        return 'üá∑üá∫';
      case 'en':
        return 'üá∫üá∏';
      default:
        return 'üá∫üá∏';
    }
  }
  
  /// –ü–æ–ª—É—á–∏—Ç—å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –ª–æ–∫–∞–ª–∏
  static TextDirection getTextDirection(Locale locale) {
    switch (locale.languageCode) {
      case 'ru':
      case 'en':
      default:
        return TextDirection.ltr;
    }
  }
  
  /// –ü–æ–ª—É—á–∏—Ç—å —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã –¥–ª—è –ª–æ–∫–∞–ª–∏
  static String getDateFormat(Locale locale) {
    switch (locale.languageCode) {
      case 'ru':
        return 'dd.MM.yyyy';
      case 'en':
      default:
        return 'MM/dd/yyyy';
    }
  }
  
  /// –ü–æ–ª—É—á–∏—Ç—å —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –ª–æ–∫–∞–ª–∏
  static String getTimeFormat(Locale locale) {
    switch (locale.languageCode) {
      case 'ru':
        return 'HH:mm';
      case 'en':
      default:
        return 'h:mm a';
    }
  }
  
  /// –ü–æ–ª—É—á–∏—Ç—å —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –ª–æ–∫–∞–ª–∏
  static String getDateTimeFormat(Locale locale) {
    switch (locale.languageCode) {
      case 'ru':
        return 'dd.MM.yyyy HH:mm';
      case 'en':
      default:
        return 'MM/dd/yyyy h:mm a';
    }
  }
} 